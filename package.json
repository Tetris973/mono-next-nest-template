{
  "name": "mono-react-nest-template",
  "version": "1.0.0",
  "description": "A template for a monorepo with a React frontend and a NestJS backend",
  "main": "index.js",
  "scripts": {
    "preinstall": "npx only-allow pnpm",
    "dev": "pnpm run --parallel dev",
    "test": "echo \"Error: no test specified\" && exit 1",
    "prepare": "husky"
  },
  "lint-staged": {
    "apps/server/src/**/*.ts": [
      "eslint --fix",
      "prettier --write"
    ],
    "apps/server/test/**/*.ts": [
      "eslint --fix",
      "prettier --write"
    ],
    "apps/web/src/**/*.ts": [
      "eslint --fix",
      "prettier --write"
    ],
    "apps/web/src/**/*.tsx": [
      "eslint --fix",
      "prettier --write"
    ],
    "apps/web/test/**/*.tsx": [
      "eslint --fix",
      "prettier --write"
    ],
    "apps/web/test/**/*.ts": [
      "eslint --fix",
      "prettier --write"
    ]
  },
  "keywords": [],
  "author": "Cedric OLENDER",
  "license": "MIT",
  "json-comments": {
    "tips": "Please install the JsonComments plugin to enable commenting functionality for JSON files, see: https://github.com/zhangfisher/json_comments_extension",
    "package.json": {
      "scripts.dev": "Runs dev from server and web in parallel",
      "scripts.preinstall": "to prevent from installing packages without pnpm"
    },
    "apps/backend/package.json": {
      "scripts.start:dev": "cross-env is used for setting NODE_ENV without bugs on multiple platforms (Windows, linux, MacOs)"
    },
    "apps/server/package.json": {
      "scripts.preinstall": "to prevent from installing packages without pnpm",
      "scripts.dev-env": "To setup dev env variable, to use in other scripts",
      "scripts.prod-env": "To setup prod env variable, to use in other scripts",
      "scripts.compose:dev": "run the docker-compose.yml file with dev env variables",
      "scripts.db-migrate": "Create and run prisma changes to the DEV database",
      "prisma.seed": "ts-node is needed, otherwise error, Added -r tsconfig-paths/register  for path alias compilation",
      "scripts.db-seed:force": "ERASE DB and seed the tables from specified seed script inf src/prisma/seeding (sh -c is needed to load env variable in both command call)",
      "scripts.db-seed": "seed tables from specified seed script in src/prisma/seeding",
      "scripts.build:dto": "Used to build the dto for the frontend",
      "scripts.db-generate": "Generates the prisma client types, needed when building for production in CI"
    },
    "apps/web/package.json": {
      "scripts.preinstall": "to prevent from installing packages without pnpm",
      "devDependencies.@storybook/addon-essentials": "\"@storybook/test\": \"^8.1.11\" can't be used as it override \"vitest.setup.mts\" config where vitest have extends type with jsdom (expect().toBeInTheDocument(), for instance). Also, according to storybook doc, Nestjs and composite story does not work with vitest, only jest."
    },
    "apps/server/nest-cli.json": {
      "compilerOptions.plugins[0].name": "Swagger plugin to automatically infer ApiProperty from DTO, class-validator, comments over properties and endpoints",
      "compilerOptions.plugins[0].options.classValidatorShim": "Use class-validator validation decorator to document swagger API",
      "compilerOptions.plugins[0].options.introspectComments": "Generate API description and example from js comments",
      "compilerOptions.builder": "Use swc for all command that use compilation",
      "compilerOptions.typeCheck": "Tell the swc compiler to run type check with tscompiler alongside swc compilation, it also execute NestJS CLI plugins and produce a serialized metadata file"
    }
  },
  "devDependencies": {
    "husky": "^9.0.11",
    "lint-staged": "^15.2.5"
  },
  "pnpm": {
    "patchedDependencies": {
      "next@14.2.4": "patches/next@14.2.4.patch"
    }
  }
}