// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// Added to have type safety, autocompletion, inference in prisma raw queries
generator kysely {
  provider = "prisma-kysely"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userRoles UserRole[]
}

model Role {
  id              Int              @id @default(autoincrement())
  name            String           @unique
  userRoles       UserRole[]
  rolePermissions RolePermission[]
}

model UserRole {
  id     Int  @id @default(autoincrement())
  userId Int
  roleId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  role   Role @relation(fields: [roleId], references: [id])

  @@unique([userId, roleId])
}

enum Action {
  manage
  CREATE
  READ
  UPDATE
  DELETE
}

model Permission {
  id              Int              @id @default(autoincrement())
  action          Action
  resourceId      Int
  condition       Json?
  resource        Resource         @relation(fields: [resourceId], references: [id])
  rolePermissions RolePermission[]
}

model Resource {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  permissions Permission[]
}

model RolePermission {
  id           Int        @id @default(autoincrement())
  roleId       Int
  permissionId Int
  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@unique([roleId, permissionId])
}
