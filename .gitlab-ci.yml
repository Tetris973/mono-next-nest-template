# image: node:20
image: registry.gitlab.com/tetris973/mono-next-nest-template/custom-node-image:latest

# include:
#   - local: '.gitlab/ci/playwright.yml'

# stages: Defines the stages in the CI/CD pipeline and their order of execution.
stages:
  - install
  - lint
  - build

# variables: Sets environment variables that can be used throughout the pipeline.
variables:
  DOCKER_DRIVER: overlay2
  NODE_ENV: 'development' # for CI, building, linting, testing everything should run in development mode, Only when deploying should it be in production mode
  # Variables for the postgres service, source -> gitlab CI variables, same value as in the $NEST_ENV_FILE
  POSTGRES_DB: $POSTGRES_SERVICE_DB
  POSTGRES_USER: $POSTGRES_SERVICE_USER
  POSTGRES_PASSWORD: $POSTGRES_SERVICE_PASSWORD

cache: &default_cache
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    # remember to cache all sub project dependencies, because pnpm install is done only once here and not in each job
    - apps/server/node_modules/
    - apps/web/node_modules/
  policy: pull # policy for all job, only enable to pull

before_script:
  - pnpm install # Needed in custom runner to reuse the dependencies and create the node_modules from each sub projects.

install:
  cache:
    <<: *default_cache
    policy: pull-push # Override the policy to pull only to update the dependency cache
  stage: install
  script:
    - pnpm install

lint-backend:
  stage: lint
  script:
    - cd apps/server
    - pnpm run lint

lint-frontend:
  stage: lint
  script:
    - cd apps/web
    - pnpm run lint

build-backend-frontend:
  stage: build
  script:
    # Build backend
    # Copy gitlab env file needed for Nest
    - cp $NEST_ENV_FILE apps/server/.env.production.local
    - cd apps/server
    - pnpm db-generate
    # - pnpm db-migrate:prod
    - pnpm run build
    - pnpm run build:dto || true # normal if it causes error, the true is to avoid failure
    - echo "Error during build:dto are Ok with it is about types not found and if front build pass"
    # Build frontend
    - cd ../web
    - export NODE_ENV=production # production is needed for Next build otherwise error
    - pnpm run build
    - export NODE_ENV=development # reset to development for the next job
  artifacts:
    paths:
      - apps/server/dist
      - apps/server/shared/dto
      - apps/web/.next


  # for e2e test jobs
  # services:
  #   - postgres # Tell the CI to host the postgress database for building the Nest bakcned and for the e2e tests.